// ====== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ======
const LINE_TOKEN = 'YOUR_LINE_CHANNEL_ACCESS_TOKEN'; // ‡πÉ‡∏™‡πà Token ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const WEBHOOK_URL = 'https://your-backend.com/api/excel-sync'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô endpoint backend ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// ====== Trigger ‡∏´‡∏•‡∏±‡∏Å: ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô Sheet ======
function onEdit(e) {
  if (!e) return;

  const sheet = e.source.getActiveSheet();
  const editedColumn = e.range.getColumn();
  const editedRow = e.range.getRow();

  // ‡∏Å‡∏£‡∏ì‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (8)
  if (editedColumn === 8 && editedRow > 1) {
    handleStatusChange(e, sheet, editedRow);
  }
  // ‡∏Å‡∏£‡∏ì‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Textbox (13)
  else if (editedColumn === 13 && editedRow > 1) {
    handleTextboxChange(e, sheet, editedRow);
  }
}

// ====== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ======
function handleStatusChange(e, sheet, editedRow) {
  const data = sheet.getRange(editedRow, 1, 1, 13).getValues()[0];

  if (data.length < 12) {
    Logger.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö 12 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå");
    return;
  }

  const payload = {
    ticket_id: data[0],
    user_id: data[1],
    email: data[2],
    name: data[3],
    phone: data[4],
    department: data[5],
    created_at: data[6] || new Date().toISOString(),
    status: data[7],
    appointment: data[8],
    requeste: data[9],
    report: data[10],
    textbox: data[11]
  };

  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á backend
  sendWebhook(payload);

  // ‡∏™‡πà‡∏á Flex Message ‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE
  sendStatusFlexMessage(payload.user_id, payload);
}

// ====== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Textbox ======
function handleTextboxChange(e, sheet, editedRow) {
  const data = sheet.getRange(editedRow, 1, 1, 13).getValues()[0];
  if (data.length < 13) return;

  const newText = data[12];
  const oldText = e.oldValue || '';

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà (‡πÑ‡∏°‡πà‡∏°‡∏µ [‡∏£‡∏∞‡∏ö‡∏ö] ‡∏´‡∏£‡∏∑‡∏≠ [‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ])
  if (!newText || newText === oldText ||
      newText.includes("[‡∏£‡∏∞‡∏ö‡∏ö]") ||
      newText.includes("[‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ]")) {
    return;
  }

  const userId = data[1];
  if (!userId) return;

  // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏î‡∏¢‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà
  const messages = newText.split('\n').filter(m => m.trim() !== '');
  const lastMessage = messages[messages.length - 1];

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏£‡∏¥‡∏á‡πÜ
  if (!lastMessage.includes("[‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà]")) {
    const timestamp = new Date().toLocaleString();
    const updatedText = `${newText}\nüíº [‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà] ${timestamp}: ${lastMessage}`;
    sheet.getRange(editedRow, 13).setValue(updatedText);
    return;
  }

  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  const messageContent = lastMessage.split(':').slice(1).join(':').trim();
  const sendResult = sendLineMessage(userId, messageContent, true); // true = ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö

  if (sendResult === 'success') {
    sheet.getRange(editedRow, 8).setValue('Pending');
  }
}

// ====== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ backend ======
function sendWebhook(payload) {
  const options = {
    method: 'post',
    contentType: 'application/json',
    payload: JSON.stringify(payload),
    muteHttpExceptions: true
  };

  try {
    const res = UrlFetchApp.fetch(WEBHOOK_URL, options);
    Logger.log('‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ backend ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + res.getContentText());
    return 'success';
  } catch (err) {
    Logger.log('‚ùå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ backend ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ' + err.message);
    return 'error';
  }
}

// ====== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á Flex Message ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Ticket ‡πÑ‡∏õ LINE ======
function sendStatusFlexMessage(userId, payload) {
  const url = 'https://api.line.me/v2/bot/message/push';

  // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const appointmentDate = payload.appointment ?
    new Date(payload.appointment).toLocaleString('th-TH', {
      day: 'numeric',
      month: 'numeric',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    }) : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î';

  // ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞)
  let statusColor;
  switch(payload.status) {
    case 'Pending':
      statusColor = '#FF9900'; // ‡∏™‡∏µ‡∏™‡πâ‡∏°
      break;
    case 'Completed':
      statusColor = '#00AA00'; // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
      break;
    case 'Rejected':
      statusColor = '#FF0000'; // ‡∏™‡∏µ‡πÅ‡∏î‡∏á
      break;
    case 'In Progress':
      statusColor = '#0066FF'; // ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô
      break;
    default:
      statusColor = '#666666'; // ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤
  }

  const flexMessage = {
    to: userId,
    messages: [{
      type: "flex",
      altText: "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Ticket ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
      contents: {
        type: "bubble",
        size: "giga",
        header: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: "üì¢ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Ticket",
              weight: "bold",
              size: "lg",
              color: "#FFFFFF",
              align: "center"
            }
          ],
          backgroundColor: "#005BBB",
          paddingAll: "20px"
        },
        body: {
          type: "box",
          layout: "vertical",
          contents: [
            // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Ticket
            {
              type: "box",
              layout: "horizontal",
              contents: [
                {
                  type: "text",
                  text: "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç",
                  weight: "bold",
                  size: "sm",
                  flex: 2,
                  color: "#666666"
                },
                {
                  type: "text",
                  text: payload.ticket_id,
                  size: "sm",
                  flex: 4,
                  align: "end"
                }
              ],
              spacing: "sm",
              margin: "md"
            },
            {
              type: "separator",
              margin: "md"
            },
            {
              type: "box",
              layout: "horizontal",
              contents: [
                {
                  type: "text",
                  text: "‡∏ä‡∏∑‡πà‡∏≠",
                  weight: "bold",
                  size: "sm",
                  flex: 2,
                  color: "#666666"
                },
                {
                  type: "text",
                  text: payload.name,
                  size: "sm",
                  flex: 4,
                  align: "end"
                }
              ],
              spacing: "sm",
              margin: "md"
            },
            {
              type: "separator",
              margin: "md"
            },
            {
              type: "box",
              layout: "horizontal",
              contents: [
                {
                  type: "text",
                  text: "‡πÅ‡∏ú‡∏ô‡∏Å",
                  weight: "bold",
                  size: "sm",
                  flex: 2,
                  color: "#666666"
                },
                {
                  type: "text",
                  text: payload.department,
                  size: "sm",
                  flex: 4,
                  align: "end"
                }
              ],
              spacing: "sm",
              margin: "md"
            },
            {
              type: "separator",
              margin: "md"
            },
            {
              type: "box",
              layout: "horizontal",
              contents: [
                {
                  type: "text",
                  text: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠",
                  weight: "bold",
                  size: "sm",
                  flex: 2,
                  color: "#666666"
                },
                {
                  type: "text",
                  text: payload.phone,
                  size: "sm",
                  flex: 4,
                  align: "end"
                }
              ],
              spacing: "sm",
              margin: "md"
            },
            {
              type: "separator",
              margin: "md"
            },
            {
              type: "box",
              layout: "horizontal",
              contents: [
                {
                  type: "text",
                  text: "Type",
                  weight: "bold",
                  size: "sm",
                  flex: 2,
                  color: "#666666"
                },
                {
                  type: "text",
                  text: payload.textbox,
                  size: "sm",
                  flex: 4,
                  align: "end"
                }
              ],
              spacing: "sm",
              margin: "md"
            },
            {
              type: "separator",
              margin: "md"
            },
            {
              type: "box",
              layout: "horizontal",
              contents: [
                {
                  type: "text",
                  text: "‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
                  weight: "bold",
                  size: "sm",
                  flex: 2,
                  color: "#666666"
                },
                {
                  type: "text",
                  text: payload.report,
                  size: "sm",
                  flex: 4,
                  align: "end",
                  wrap: true
                },
                {
                  type: "text",
                  text: payload.requeste,
                  size: "sm",
                  flex: 4,
                  align: "end",
                  wrap: true
                },
              ],
              spacing: "sm",
              margin: "md"
            },
            {
              type: "separator",
              margin: "md"
            },
            {
              type: "box",
              layout: "horizontal",
              contents: [
                {
                  type: "text",
                  text: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢",
                  weight: "bold",
                  size: "sm",
                  flex: 2,
                  color: "#666666"
                },
                {
                  type: "text",
                  text: appointmentDate,
                  size: "sm",
                  flex: 4,
                  align: "end"
                }
              ],
              spacing: "sm",
              margin: "md"
            },
            // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå)
            {
              type: "box",
              layout: "vertical",
              contents: [
                {
                  type: "text",
                  text: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
                  weight: "bold",
                  size: "sm",
                  color: "#666666",
                  margin: "md"
                },
                {
                  type: "text",
                  text: payload.status,
                  weight: "bold",
                  size: "xl",
                  color: statusColor,
                  align: "center",
                  margin: "sm"
                }
              ],
              backgroundColor: "#F5F5F5",
              cornerRadius: "md",
              margin: "xl",
              paddingAll: "md"
            }
          ],
          spacing: "md",
          paddingAll: "20px"
        },
        footer: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤",
              size: "xs",
              color: "#888888",
              align: "center"
            }
          ],
          paddingAll: "10px"
        }
      }
    }]
  };

  const options = {
    method: 'post',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer ' + LINE_TOKEN
    },
    payload: JSON.stringify(flexMessage),
    muteHttpExceptions: true
  };

  try {
    const res = UrlFetchApp.fetch(url, options);
    return res.getResponseCode() === 200 ? 'success' : 'error';
  } catch (err) {
    Logger.log('‚ùå ‡∏™‡πà‡∏á LINE Flex Message ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ' + err.message);
    return 'error';
  }
}

// ====== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ LINE (Push) ======
function sendLineMessage(userId, message, isReply = false) {
  const url = 'https://api.line.me/v2/bot/message/push';

  let payload;

  if (isReply) {
    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Flex Message)
    payload = {
      to: userId,
      messages: [{
        type: "flex",
        altText: "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
        contents: {
          type: "bubble",
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üíº ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
                weight: "bold",
                size: "lg",
                color: "#005BBB"
              },
              {
                type: "text",
                text: message,
                wrap: true,
                margin: "md"
              },
              {
                type: "text",
                text: "‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏à‡∏ö' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤",
                size: "sm",
                color: "#AAAAAA",
                margin: "md"
              }
            ]
          }
        }
      }]
    };
  } else {
    // ‡∏Å‡∏£‡∏ì‡∏µ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤)
    payload = {
      to: userId,
      messages: [{ type: 'text', text: message }]
    };
  }

  const options = {
    method: 'post',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer ' + LINE_TOKEN
    },
    payload: JSON.stringify(payload),
    muteHttpExceptions: true
  };

  try {
    const res = UrlFetchApp.fetch(url, options);
    return res.getResponseCode() === 200 ? 'success' : 'error';
  } catch (err) {
    Logger.log('‚ùå ‡∏™‡πà‡∏á LINE ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ' + err.message);
    return 'error';
  }
}

// ====== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡∏£‡∏±‡∏ô‡πÉ‡∏ô Script Editor ‡πÑ‡∏î‡πâ) ======
function testSendWebhook() {
  const payload = {
    TicketID: 'TICKET001',
    Name: '‡∏ô‡∏≤‡∏¢‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö',
    Status: 'Pending'
  };
  sendWebhook(payload);
}

function testSendLine() {
  const testUserId = 'YOUR_LINE_USER_ID';
  sendLineMessage(testUserId, '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Apps Script');
}
